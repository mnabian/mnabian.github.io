# Project template

- name: Transportation network reliability analysis
  #link: github.com/mnabian
  github: mnabian/DNN_Reliability_Repository
  description: | # this will include new lines to allow paragraphs
    In this project, I sought to improve the reliability analysis of transportation networks following extreme earthquake events. I have developed a novel deep learning method that accelerated seismic reliability analysis of large transportation systems. My contributions to this research include two different deep neural network models: a classifier model to speed up the connectivity determination of networks, and an end-to-end model to replace a group of modules in the transportation network reliability analysis pipeline. These models serve as useful tools for optimizing mitigation and preparedness procedures before extreme events happen, and also for improving emergency response after extreme events. I have ultimately developed a general framework for the accurate and accelerated seismic reliability analysis of transportation systems. This improved technique accounts for the inherent uncertainties in these systems and during earthquake events. This deep learning-based method exhibited improved performance over other machine learning-based reliability analysis techniques. Take a look at this [poster](https://www.dropbox.com/s/tfenm5glv39iwdm/Reliability1.pdf?dl=0) and this [poster](https://www.dropbox.com/s/38sy10er82zau4z/Reliability2.pdf?dl=0).

- name: Deep learning for random PDEs
  #link: github.com/mnabian
  #github: mnabian
  description: | # this will include new lines to allow paragraphs
    In this research project, I have turned my focus to Partial Differential Equations (PDEs), which are useful for describing a variety of physical phenomena relevant to infrastructure analysis, including earthquake wave propagation and the prediction of traffic flow and fluid flow. The reliable analysis of these phenomena often requires taking into account the inherent randomness in the system. I have proposed new algorithms that make use of deep neural networks in order to improve upon conventional random PDE solution methods. Compared to previous approaches, my proposed methods are straightforward and achieve computational efficiency by optimizing the usage of advanced computer hardware, such as GPUs. These methods result in accurate solutions that have closed analytical forms and are thus able to be easily transferred to subsequent calculations. Moreover, these methods result in solutions that are real-time executable and thus are suited to the prediction of dynamic physical phenomena, such as traffic flow. While other solution methods are problem-dependent and suffer from the curse of dimensionality, my proposed algorithm is very well suited to different forms of random PDEs, and alleviates the curse of dimensionality issue. Ultimately, my proposed deep neural network modeling techniques offered a significantly beneficial approach to solving high-dimensional random PDEs common in engineering as well as a variety of other fields. Take a look at this [presentation](https://www.dropbox.com/s/e61ylx0v90lvef1/PDE.pdf?dl=0).

- name: Mesh-free simulation of multiphase flows
  #link: github.com/mnabian
  #github: mnabian
  description: | # this will include new lines to allow paragraphs
    In this project, I have contributed to the accurate simulation of numerous real-world free-surface problems, such as dam-breaks, landslides, and other phenomena that are often induced by earthquakes. Based on these simulations, I have devised an algorithm for simulating multiphase free-surface flows, which serves as a tool for simulating free-surface flow phenomena occurring in both industry and the natural world. I have applied his algorithm, which is called the multiphase MPS method, to a number of real-world phenomena in order to verify its accuracy and illustrate some of its many applications. Further, I have built upon my original algorithm in order to develop a multi-resolution MPS method, which allows for the simulation of different types of fluid flow in different resolutions. I have then confirmed that, compared to standard methods, the proposed methods reduce the computation cost of free-surface flow simulation. As such, my work on this project has addressed one of the most crucial problems in the field with regard to computational fluid dynamics. Take a look at this [poster](https://www.dropbox.com/s/gmd0e698c4liwyr/MPS1.pdf?dl=0) and this [poster](https://www.dropbox.com/s/ybtzetsr6qovoje/MPS2.pdf?dl=0). <mark>ASME Awarded Project</mark>

- name: Physics-driven regularization of deep neural networks
  description: | # this will include new lines to allow paragraphs
    Many science and engineering problems require repetitive simulation runs of a model with different input values. Examples of these problems include design optimization, model calibration, and sensitivity analysis. However, in many real-world problems, obtaining a reliable outcome requires large number of these solves, which can be prohibitive given the available resources. One way to alleviate this burden is to construct approximate models that mimic the solution behavior for these systems. Deep neural networks are among the most powerful machine-learning tools which can be used effectively for construction of these approximate models. However, deep neural networks suffer from two shortcomings: they are not physically interpretable, and are prone to overfitting. In this research I present a method for training deep neural networks for systems that are subject to known governing laws which are in the form of a partial differential equation. This prior knowledge is usually available from first principles, empirically-validated laws, and/or knowledge obtained by domain expertise, but not directly used in training of the deep neural networks. In the proposed method, I make use of the available prior knowledge about the governing laws by systematically penalizing any violation of the metamodel form these laws. It is shown that the proposed method offers two main advantages: (1) it effectively prevents overfitting and results in significantly smaller modeling errors, when compared to other state of the practice training methods; and (2) it results in models that are physically interpretable, as opposed to the ones that are trained using state of the practice training methods. Take a look at this [presentation](https://www.dropbox.com/s/fdq17ntikx6gdku/Regularization.pdf?dl=0).

- name: Predicting train delay in Netherlands
  #link: github.com/mnabian
  #github: mnabian
  description: | # this will include new lines to allow paragraphs
    Train delay is a critical problem in railroad operations, which has led to the development of analytical and simulation-based approaches to estimate it. With the recent advances in sensing and communication technologies, train positioning information is now available to support new data-driven methods for train delay estimation. Passenger train transportation is a key mode of transport in the Netherlands that serves more than a million passengers daily. Reliable real-time data is of high importance for smooth punctual operations. In this work, my goal was to predict passenger train delays in Netherlands. To this end, using the data provided by the Netherlands Railways and including planned timetable, actual historical train performance, crew schedule, rolling stock circulation, infrastructure data, and weather conditions, I proposed a novel bi-level random forest approach. At primary level, a random forest model is used as a classifier to predict whether the current train delay will increase, decrease or remain unchanged. At secondary level, random forest regression models are used to quantify the change in delay. To validate the approach, I have compared random forest with several alternative approaches including linear regression, multinomial logistic regression, decision tree, K-nearest neighbors, and support vector machines/regression. It is observed that the proposed bi-level random forest outperforms these alternative approaches in terms of prediction accuracy for passenger train delay prediction in Netherlands railways. Take a look at this [presentation](https://www.dropbox.com/s/rb5pi3ec0bpkn9g/Rail.pdf?dl=0). <mark>INFORMS Awarded Project</mark>

- name: Uncertainty Quantification in Patient-Specific Cardiovascular Simulation
  #link: github.com/mnabian
  #github: mnabian
  description: | # this will include new lines to allow paragraphs
    Patient-specific cardiovascular simulations enable non-invasive assessment of hemodynamics in heart and major blood vessels for patients suffering from cardiovascular disease. This data is not readily available from standard clinical measurements, yet it can offer key insights into disease progression and subsequent physiologic responses, and thus aid in surgical and treatment planning and clinical decision-making. The confidence in the data output from cardiovascular simulations depends directly on our level of certainty in simulation input parameters. The sources of uncertainties in cardiovascular simulation include clinical data, geometry, boundary conditions, material properties, and simulation parameters. Simulations are only as accurate as the data that goes into them and a thorough study is needed to determine how variations in these input data affects the outputs. Therefore, patient-specific computational simulations aid in surgical and treatment planning and clinical decision-making. In this study, I have proposed an uncertainty-aware patient-specific cardiovascular simulation framework for enhanced health monitoring and treatment planning. Take a look at this [poster](https://www.dropbox.com/s/r7qajq5a16x33ez/Cardiovascular.pdf?dl=0).
